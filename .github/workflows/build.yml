name: Build Docker Images

on:
  push:
    branches:
      - main
    paths:
      - '*/version.txt'
      - '*/*/version.txt'
      - '.github/workflows/build.yml'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      base_images: ${{ steps.set-matrix.outputs.base_images }}
      dependent_images: ${{ steps.set-matrix.outputs.dependent_images }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Get changed directories with version files
        id: changed-dirs
        run: |
          # For pushes to main, compare with the previous commit
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD | grep -E "^[^/]*/([^/]*/)?version.txt")

          # Extract base images (those without subdirectories)
          BASE_IMAGES=$(echo "$CHANGED_FILES" | grep -o "^[^/]*/version.txt" | sed 's/\/version.txt//' | sort | uniq | jq -R -s -c 'split("\n") | map(select(length > 0))')

          # Extract dependent images (those with subdirectories)
          DEPENDENT_IMAGES=$(echo "$CHANGED_FILES" | grep -o "^[^/]*/[^/]*/version.txt" | sed 's/\/version.txt//' | sort | uniq | jq -R -s -c 'split("\n") | map(select(length > 0))')

          echo "Base images: $BASE_IMAGES"
          echo "Dependent images: $DEPENDENT_IMAGES"

          echo "base_images=$BASE_IMAGES" >> $GITHUB_OUTPUT
          echo "dependent_images=$DEPENDENT_IMAGES" >> $GITHUB_OUTPUT

      - name: Set matrix
        id: set-matrix
        run: |
          echo "base_images=${{ steps.changed-dirs.outputs.base_images }}" >> $GITHUB_OUTPUT
          echo "dependent_images=${{ steps.changed-dirs.outputs.dependent_images }}" >> $GITHUB_OUTPUT

  build-base:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.base_images != '[]' }}
    strategy:
      matrix:
        service: ${{ fromJson(needs.detect-changes.outputs.base_images) }}
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Get version
        id: get-version
        run: |
          VERSION=$(cat ${{ matrix.service }}/version.txt | tr -d '[:space:]')
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./${{ matrix.service }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            thisisgain/${{ matrix.service }}:latest
            thisisgain/${{ matrix.service }}:${{ steps.get-version.outputs.VERSION }}

  build-dependent:
    runs-on: ubuntu-latest
    needs: [detect-changes, build-base]
    if: ${{ needs.detect-changes.outputs.dependent_images != '[]' }}
    strategy:
      matrix:
        service: ${{ fromJson(needs.detect-changes.outputs.dependent_images) }}
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Get version and parent info
        id: get-info
        run: |
          # Extract parent and child directories
          PARENT_DIR=$(echo "${{ matrix.service }}" | cut -d'/' -f1)
          CHILD_DIR=$(echo "${{ matrix.service }}" | cut -d'/' -f2)

          # Get versions
          VERSION=$(cat ${{ matrix.service }}/version.txt | tr -d '[:space:]')

          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "PARENT_DIR=$PARENT_DIR" >> $GITHUB_OUTPUT
          echo "IMAGE_NAME=${PARENT_DIR}-${CHILD_DIR}" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./${{ matrix.service }}
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            thisisgain/${{ steps.get-info.outputs.PARENT_DIR }}:${{ steps.get-info.outputs.VERSION }}
